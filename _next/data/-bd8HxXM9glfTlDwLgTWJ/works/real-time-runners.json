{"pageProps":{"workSource":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Notre client\"), mdx(\"p\", null, \"Simply Charge est une startup qui fournit des batteries mobiles \\xE0 usage unique. Ces batteries sont mises \\xE0 disposition dans des distributeurs automatiques, install\\xE9s chez des commer\\xE7ants ou dans des lieux publics. Concept prometteur : \\xE0 la fois pratique pour les personnes tomb\\xE9es en panne de batterie \\xE0 l\\u2019\\xE8re des smartphones ultrapuissants et source de revenus compl\\xE9mentaires pour les commer\\xE7ants.\"), mdx(\"p\", null, \"Le c\\u0153ur de m\\xE9tier de Simply Charge sera alors l\\u2019optimisation du remplissage des distributeurs automatiques de batterie par son \\xE9quipe de \\\"runners\\\".\"), mdx(\"h2\", null, \"La mission qui nous a \\xE9t\\xE9 confi\\xE9e\"), mdx(\"p\", null, \"D\\xE9velopper une application d\\u2019aide \\xE0 la gestion des stocks permettant :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Un suivi temps r\\xE9el du niveau de remplissage des distributeurs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Un suivi pr\\xE9dictif pour \\xE9valuer \\xE0 l\\u2019avance quels distributeurs auront besoin d\\u2019\\xEAtre recharg\\xE9s\")), mdx(\"h2\", null, \"Notre intervention\"), mdx(\"p\", null, \"Nous avons d\\xE9velopp\\xE9 une application web JavaScript avec Vulcan.js. Le choix d\\u2019utiliser le framework Vulcan a permis :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"De cr\\xE9er une version web et une version mobile Android avec une seule base de code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"D\\u2019acc\\xE9l\\xE9rer les d\\xE9veloppements gr\\xE2ce aux fonctionnalit\\xE9s d\\xE9j\\xE0 existantes dans Vulcan (mise \\xE0 jour des donn\\xE9es en temps r\\xE9el, gestion des r\\xF4les et des permissions, affichage des donn\\xE9es)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"L\\u2019application comporte plusieurs modules interconnect\\xE9s : gestion des clients, gestion des stocks des distributeurs, et suivi des tourn\\xE9es. Le coursier charg\\xE9 de remplir les distributeurs utilise l\\u2019application pour g\\xE9rer sa tourn\\xE9e et indique quels distributeurs il a remplis. Un syst\\xE8me de QR Code permet un suivi s\\xE9curis\\xE9 du bon d\\xE9roulement des op\\xE9rations par l\\u2019\\xE9quipe de Simply Charge.\")), mdx(\"h2\", null, \"R\\xE9sultats\"), mdx(\"p\", null, \"Nous avons d\\xE9velopp\\xE9 une solution de gestion compl\\xE8te et op\\xE9rationnelle en seulement 15 jours. L\\u2019application a \\xE9t\\xE9 mise en production en version web mais aussi mobile.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/works/simply-charge/simply-charge.png\",\n    \"alt\": \"Simply Charge\"\n  })));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h2 class=\"text-4xl font-extralight my-6 text-text-heavy\">Notre client</h2><p class=\"text-justify\">Simply Charge est une startup qui fournit des batteries mobiles à usage unique. Ces batteries sont mises à disposition dans des distributeurs automatiques, installés chez des commerçants ou dans des lieux publics. Concept prometteur : à la fois pratique pour les personnes tombées en panne de batterie à l’ère des smartphones ultrapuissants et source de revenus complémentaires pour les commerçants.</p><p class=\"text-justify\">Le cœur de métier de Simply Charge sera alors l’optimisation du remplissage des distributeurs automatiques de batterie par son équipe de &quot;runners&quot;.</p><h2 class=\"text-4xl font-extralight my-6 text-text-heavy\">La mission qui nous a été confiée</h2><p class=\"text-justify\">Développer une application d’aide à la gestion des stocks permettant :</p><ul class=\"list-outside left-px-2 list-losange\"><li class=\"pb-1\">Un suivi temps réel du niveau de remplissage des distributeurs</li><li class=\"pb-1\">Un suivi prédictif pour évaluer à l’avance quels distributeurs auront besoin d’être rechargés</li></ul><h2 class=\"text-4xl font-extralight my-6 text-text-heavy\">Notre intervention</h2><p class=\"text-justify\">Nous avons développé une application web JavaScript avec Vulcan.js. Le choix d’utiliser le framework Vulcan a permis :</p><ul class=\"list-outside left-px-2 list-losange\"><li class=\"pb-1\">De créer une version web et une version mobile Android avec une seule base de code</li><li class=\"pb-1\">D’accélérer les développements grâce aux fonctionnalités déjà existantes dans Vulcan (mise à jour des données en temps réel, gestion des rôles et des permissions, affichage des données)</li><li class=\"pb-1\">L’application comporte plusieurs modules interconnectés : gestion des clients, gestion des stocks des distributeurs, et suivi des tournées. Le coursier chargé de remplir les distributeurs utilise l’application pour gérer sa tournée et indique quels distributeurs il a remplis. Un système de QR Code permet un suivi sécurisé du bon déroulement des opérations par l’équipe de Simply Charge.</li></ul><h2 class=\"text-4xl font-extralight my-6 text-text-heavy\">Résultats</h2><p class=\"text-justify\">Nous avons développé une solution de gestion complète et opérationnelle en seulement 15 jours. L’application a été mise en production en version web mais aussi mobile.</p><p class=\"text-justify\"><style data-emotion=\"css r2bpky\">.css-r2bpky{display:block;max-height:400px;max-width:90%;margin-left:auto;margin-right:auto;}</style><img src=\"/works/simply-charge/simply-charge.png\" alt=\"Simply Charge\" class=\"css-r2bpky\"/></p>","scope":{}},"workMeta":{"data":{"title":"Gérer une flotte de runners en temps réel","slug":"real-time-runners","summary":"Simply Charge est une startup qui fournit des batteries mobiles à usage unique. Ces batteries sont mises à disposition dans des distributeurs automatiques, installés chez des commerçants ou dans des lieux publics. Concept prometteur car à la fois pratique pour les personnes tombées en panne de batterie à l’ère des smartphones ultrapuissants, et pour les commerçants qui y voient une source de revenu et de publicité.","banner":"/works/simply-charge/banner.png","thumbnail":"/works/simply-charge/thumbnail.png"},"filename":"simply-charge.md"}},"__N_SSG":true}